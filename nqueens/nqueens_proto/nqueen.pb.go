// Code generated by protoc-gen-go. DO NOT EDIT.
// source: nqueen.proto

package nqueens_proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SubProblemRequest struct {
	// 皇后个数
	Nqueens int32 `protobuf:"varint,1,opt,name=nqueens,proto3" json:"nqueens,omitempty"`
	// 皇后放在第一行的位置
	FirstNow             int32    `protobuf:"varint,2,opt,name=firstNow,proto3" json:"firstNow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubProblemRequest) Reset()         { *m = SubProblemRequest{} }
func (m *SubProblemRequest) String() string { return proto.CompactTextString(m) }
func (*SubProblemRequest) ProtoMessage()    {}
func (*SubProblemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_nqueen_3bc8c64a4753d3e9, []int{0}
}
func (m *SubProblemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubProblemRequest.Unmarshal(m, b)
}
func (m *SubProblemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubProblemRequest.Marshal(b, m, deterministic)
}
func (dst *SubProblemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubProblemRequest.Merge(dst, src)
}
func (m *SubProblemRequest) XXX_Size() int {
	return xxx_messageInfo_SubProblemRequest.Size(m)
}
func (m *SubProblemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubProblemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubProblemRequest proto.InternalMessageInfo

func (m *SubProblemRequest) GetNqueens() int32 {
	if m != nil {
		return m.Nqueens
	}
	return 0
}

func (m *SubProblemRequest) GetFirstNow() int32 {
	if m != nil {
		return m.FirstNow
	}
	return 0
}

type SubProblemResponse struct {
	// 根据请求求解的个数
	Count int64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	// 求解消耗的时间
	Senconds             float64  `protobuf:"fixed64,2,opt,name=senconds,proto3" json:"senconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubProblemResponse) Reset()         { *m = SubProblemResponse{} }
func (m *SubProblemResponse) String() string { return proto.CompactTextString(m) }
func (*SubProblemResponse) ProtoMessage()    {}
func (*SubProblemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_nqueen_3bc8c64a4753d3e9, []int{1}
}
func (m *SubProblemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubProblemResponse.Unmarshal(m, b)
}
func (m *SubProblemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubProblemResponse.Marshal(b, m, deterministic)
}
func (dst *SubProblemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubProblemResponse.Merge(dst, src)
}
func (m *SubProblemResponse) XXX_Size() int {
	return xxx_messageInfo_SubProblemResponse.Size(m)
}
func (m *SubProblemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubProblemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubProblemResponse proto.InternalMessageInfo

func (m *SubProblemResponse) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *SubProblemResponse) GetSenconds() float64 {
	if m != nil {
		return m.Senconds
	}
	return 0
}

func init() {
	proto.RegisterType((*SubProblemRequest)(nil), "nqueens_proto.SubProblemRequest")
	proto.RegisterType((*SubProblemResponse)(nil), "nqueens_proto.SubProblemResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NQueensServiceClient is the client API for NQueensService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NQueensServiceClient interface {
	Solve(ctx context.Context, in *SubProblemRequest, opts ...grpc.CallOption) (*SubProblemResponse, error)
}

type nQueensServiceClient struct {
	cc *grpc.ClientConn
}

func NewNQueensServiceClient(cc *grpc.ClientConn) NQueensServiceClient {
	return &nQueensServiceClient{cc}
}

func (c *nQueensServiceClient) Solve(ctx context.Context, in *SubProblemRequest, opts ...grpc.CallOption) (*SubProblemResponse, error) {
	out := new(SubProblemResponse)
	err := c.cc.Invoke(ctx, "/nqueens_proto.NQueensService/Solve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NQueensServiceServer is the server API for NQueensService service.
type NQueensServiceServer interface {
	Solve(context.Context, *SubProblemRequest) (*SubProblemResponse, error)
}

func RegisterNQueensServiceServer(s *grpc.Server, srv NQueensServiceServer) {
	s.RegisterService(&_NQueensService_serviceDesc, srv)
}

func _NQueensService_Solve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubProblemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NQueensServiceServer).Solve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/nqueens_proto.NQueensService/Solve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NQueensServiceServer).Solve(ctx, req.(*SubProblemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NQueensService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "nqueens_proto.NQueensService",
	HandlerType: (*NQueensServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Solve",
			Handler:    _NQueensService_Solve_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "nqueen.proto",
}

func init() { proto.RegisterFile("nqueen.proto", fileDescriptor_nqueen_3bc8c64a4753d3e9) }

var fileDescriptor_nqueen_3bc8c64a4753d3e9 = []byte{
	// 187 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x8e, 0xc1, 0xea, 0x82, 0x40,
	0x10, 0x87, 0xff, 0xfe, 0xc3, 0x8a, 0xa1, 0x82, 0x96, 0x0e, 0xe2, 0xc9, 0x3c, 0x75, 0xf2, 0x50,
	0xef, 0x10, 0x74, 0x91, 0x5a, 0x1f, 0xa0, 0xd0, 0x26, 0x10, 0x6c, 0x47, 0x77, 0x76, 0xed, 0xf5,
	0xa3, 0xb5, 0xa4, 0x08, 0x3a, 0x7e, 0xcc, 0x8f, 0x6f, 0x3e, 0x98, 0xa8, 0xc6, 0x22, 0xaa, 0xa4,
	0xd6, 0x64, 0x48, 0x4c, 0x3b, 0xe2, 0xa3, 0xc3, 0x78, 0x07, 0xf3, 0xcc, 0xe6, 0x7b, 0x4d, 0x79,
	0x85, 0x57, 0x89, 0x8d, 0x45, 0x36, 0x22, 0x80, 0xd1, 0x73, 0x15, 0x78, 0x91, 0xb7, 0xf2, 0xe5,
	0x0b, 0x45, 0x08, 0xe3, 0x4b, 0xa9, 0xd9, 0xa4, 0x74, 0x0b, 0xfe, 0xdd, 0xa9, 0xe7, 0x78, 0x0b,
	0xe2, 0x5d, 0xc5, 0x35, 0x29, 0x46, 0xb1, 0x00, 0xbf, 0x20, 0xab, 0x8c, 0x33, 0x0d, 0x64, 0x07,
	0x0f, 0x0f, 0xa3, 0x2a, 0x48, 0x9d, 0xd9, 0x79, 0x3c, 0xd9, 0xf3, 0xfa, 0x04, 0xb3, 0xf4, 0xe0,
	0xde, 0x65, 0xa8, 0xdb, 0xb2, 0x40, 0x91, 0x82, 0x9f, 0x51, 0xd5, 0xa2, 0x88, 0x92, 0x8f, 0xfa,
	0xe4, 0x2b, 0x3d, 0x5c, 0xfe, 0x58, 0x74, 0x45, 0xf1, 0x5f, 0x3e, 0x74, 0xb7, 0xcd, 0x3d, 0x00,
	0x00, 0xff, 0xff, 0xa2, 0x33, 0x4f, 0xd5, 0x1a, 0x01, 0x00, 0x00,
}
